package com.example.demo;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.model.UserDTO;
import com.example.demo.service.UserService;

@Controller
public class HomeController {
	@RequestMapping(value="/home")
	@ResponseBody
	public String Home() {
		return "Hello Spring Boot";
	}
	
	@RequestMapping(value="/homehtml")
	public String Homehtml() {
		return "Home";
	}
	
	@GetMapping("/TestJsp")
	public String Jsp() {
		return "Test";
	}
	
	@Autowired
	private UserService userService; //의존성 주입 - 필드 주입
	
	@GetMapping("/Test")
	public String Test(Model model) {
		List<UserDTO> users = userService.getAllUser();
		model.addAttribute("users", users);
		return "DbTest";
	}
	
	@PostMapping("InsertTest")
	public String InsertTest(UserDTO userDTO) {
		userService.InsertTest(userDTO);
		return "redirect:/Test";
	}
	@GetMapping("/DeleteTest")
	public String DeleteTest(@RequestParam int id) {
		userService.DeleteTest(id);
		return "redirect:/Test";
	}
	@PostMapping("/UpdateTest")
	public String UpdateTest(UserDTO userDTO) {
		userService.UpdateTest(userDTO);
		return "redirect:/Test";
	}
	@GetMapping("/UpdateTest")
	public String showUpdateForm(@RequestParam("id") int id, Model model) {
	    // 수정할 사용자 정보 가져오기
	    UserDTO user = userService.getUserById(id); // 이 메서드가 없다면 새로 만들어야 함
	    model.addAttribute("user", user);
	    return "UpdateForm"; // -> /WEB-INF/views/UpdateForm.jsp
	}


}
